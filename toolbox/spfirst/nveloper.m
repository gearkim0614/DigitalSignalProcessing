% Enveloper -- Envelope Control Pannel v1.2 / EE2200 / February 13, 1995
%
% Purpose: This GUI script allows users to edit FM envelopes. The GUI builds
%          As the user supplies more exteranl code.
%
%    Stage 1: No external code.  The user has not written any code for this
%             section of the lab and is just examining the basic functions
%             of the woodwenv.m function. Users can edit the Attack, Sustain,
%             and duration of the envelope. The envelope can be viewed with
%             the plot button, and listened to with a play sound button.
%
%    Stage 2: The user has created the scale.m function. The GUI now adds
%             a control pannel that has options for rescaling the envelopes.
%             listen and plot are available for examining the envelope.
%
%    Stage 3: The user has supplied the clarinet.m funtion. User can now
%             hear the envelope as applied to different pitches. Note that
%             the signal generation in this stage is placed on the user's
%             function.

% Changes since v1.1: Made more rigid. Removed plot-to-killed-window
%    error. Removed an invalid array length error in plot and play routines.
%    Changed all playsound calls to sound calls. Changed file name
%    to nveloper.m for compatability on dos platforms.

% Notes on changing window interface: In order to get the varying window
%    size (depending on what stage the user is at), care had to be taken
%    in constructing the window buttons. Buttons should be thought of in
%    terms of "compile time". This means that the stage number could NOT
%    be used in the button scripts. The work around for this is that you
%    build the button scripts AT compile time (Look at the Print and Play
%    portions of this). 

% Author(s): Craig Ulmer

% Preset values
page_number=0;
att=.1;
sus=.35;
decay=.05;
ialpha=1;
aalpha=1;
ibeta=0;
abeta=0;
fre=300;
fs=8000;
delta=1/fs;

%Set up the window variables (this is due to the different sizes needed
%                              depending on what level the user is at)

W_DEPTH=225;

SET_LEFT=20;
SET_BOTTOM=10;
BOX_HEIGHT=50;

SLIDER_LENGTH=115;
SLIDER_DEPTH=15;

EDIT_LENGTH=40;
EDIT_DEPTH=20;

EDIT_H=SLIDER_LENGTH-EDIT_LENGTH;
 
TEXT_LENGTH=EDIT_H;
TEXT_DEPTH=20;

SLIDER_V=20;
COLUMN_BORDER=15;
COLUMN_LENGTH=(SLIDER_LENGTH+2*COLUMN_BORDER);
COLUMN_DEPTH=W_DEPTH-2*(SET_BOTTOM-5);

W_LEFT=400;
W_LENGTH=2*(COLUMN_LENGTH+SET_LEFT);

% -/- Determine What Version  -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-

ver_clair= (exist ('clarinet.m'));
ver_scale= (exist ('scale.m'));

% -/- Error Checking  -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-

%Check to make sure that if you have the Clairinet function, you also have Scale
if (ver_clair & ~(ver_scale))
 error('Found "clarinet.m" but could not find "scale.m". You need both.')
end 

%Check to make sure the woodwenv.m file is out there..somewhere.
if ~(exist ('woodwenv.m'))
  error('Could not find "woodwenv.m" file. You can find it in ~mcclella/ee2200')
end

% -/- Determine How Long to make the window -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-
if (ver_scale)
     W_LENGTH=W_LENGTH + 2*COLUMN_LENGTH;
end

if (ver_clair)
     W_LENGTH=W_LENGTH + COLUMN_LENGTH;
end       

% -/- Initialize Main Panel  -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-

%initialize the control window depending on what version

e_control_win=figure('units','normal','resize','off','units','pixels',...
                       'pos',[W_LEFT 0 W_LENGTH W_DEPTH],...
                      'numbertitle','off','name','Envelope Control Window');

% -/- Define Envelope Parameters -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-

% Set up a frame around the envelope sliders
uicontrol(e_control_win, 'style','frame',...
               'pos', [(SET_LEFT-COLUMN_BORDER) (SET_BOTTOM-5) COLUMN_LENGTH COLUMN_DEPTH ]);
uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM+ 4*BOX_HEIGHT - SLIDER_V) SLIDER_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','center','string','Envelope Control');
% Attack Text
uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM + 3*BOX_HEIGHT) TEXT_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','left','string','Attack(s):');

% Attack Entry Box
ed_att_call = ['temp = str2num(get(ed_att,''string''));'...
               'if ((.001 <= temp) & (temp <= 2)),', ...
               'att = temp; end, set(sli_att,''val'',att); '];
ed_att = uicontrol('style','edit', ...
 'pos', [(SET_LEFT + EDIT_H) (SET_BOTTOM + 3*BOX_HEIGHT) EDIT_LENGTH EDIT_DEPTH],...
                   'string', num2str(att), 'val', att,...
                   'call', [ed_att_call]);
% Attack Slider
sli_att = uicontrol(e_control_win,...
     'Style','slider',...
     'Min',.001,'Max',2,'val',att,...
     'pos',[SET_LEFT (SET_BOTTOM+3*BOX_HEIGHT-SLIDER_V) SLIDER_LENGTH SLIDER_DEPTH],...
     'CallBack',['att=get(sli_att,''val'');',...
                 'set(ed_att,''string'',num2str(att));']);         

% Sustain Text
uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM + 2*BOX_HEIGHT) TEXT_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','left','string','Sustain(s):');

% Sustain Entry Box
ed_sus_call = ['temp = str2num(get(ed_sus,''string''));'...
               'if ((.248 <= temp) & (temp <= 2)),', ...
               'sus = temp; end, set(sli_sus,''val'',sus); '];

ed_sus = uicontrol('style','edit', ...
                   'horizontalalignment','right',...
 'pos', [(SET_LEFT + EDIT_H) (SET_BOTTOM + 2*BOX_HEIGHT) EDIT_LENGTH EDIT_DEPTH],...
                   'string', num2str(sus), 'val', sus,...
                   'call', [ed_sus_call]);
          
% Sustain Slider
sli_sus = uicontrol(e_control_win,...
     'Style','slider',...
     'Min',.248,'Max',2,'val',sus,...
     'pos',[SET_LEFT (SET_BOTTOM+2*BOX_HEIGHT-SLIDER_V) SLIDER_LENGTH SLIDER_DEPTH],...
     'CallBack',['sus=get(sli_sus,''val'');',...
                 'set(ed_sus,''string'',num2str(sus));']);         
% Decay Text
uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM + 1*BOX_HEIGHT) TEXT_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','left','string','Decay(s):');

% Decay Entry Box
ed_decay_call = ['temp = str2num(get(ed_decay,''string''));'...
               'if ((.001 <= temp) & (temp <= 2)),', ...
               'decay = temp; end, set(sli_decay,''val'',decay); '];

ed_decay = uicontrol('style','edit', ...
 'pos', [(SET_LEFT + EDIT_H) (SET_BOTTOM + 1*BOX_HEIGHT) EDIT_LENGTH EDIT_DEPTH],...
                   'string', num2str(decay), 'val', decay,...
                   'call', [ed_decay_call]);          
% Decay Slider
sli_decay = uicontrol(e_control_win,...
     'Style','slider',...
     'Min',.001,'Max',2,'val',decay,...
     'pos',[SET_LEFT (SET_BOTTOM+1*BOX_HEIGHT-SLIDER_V) SLIDER_LENGTH SLIDER_DEPTH],...
     'CallBack',['decay=get(sli_decay,''val'');',...
                 'set(ed_decay,''string'',num2str(decay));']);  
                   
% -/- Define Scale Parameters -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-     
if (ver_scale)
 SET_LEFT=COLUMN_LENGTH+(SET_LEFT); 
 COLUMN_LENGTH=COLUMN_LENGTH*2;          

 % Set up a frame
 uicontrol(e_control_win, 'style','frame',...
               'pos', [(SET_LEFT-COLUMN_BORDER) (SET_BOTTOM-5) (COLUMN_LENGTH+2*COLUMN_BORDER) COLUMN_DEPTH ]);
 uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM+ 4*BOX_HEIGHT - SLIDER_V) 2*(SLIDER_LENGTH+COLUMN_BORDER) TEXT_DEPTH], ...
          'horizontalalignment','center','string','Scale Control');
 uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM+ 3*BOX_HEIGHT + 0*SLIDER_V) 2*(SLIDER_LENGTH+COLUMN_BORDER) TEXT_DEPTH], ...
          'horizontalalignment','center','string','A(t)');
 uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM+ 1*BOX_HEIGHT + 0*SLIDER_V) 2*(SLIDER_LENGTH+COLUMN_BORDER) TEXT_DEPTH], ...
          'horizontalalignment','center','string','I(t)');
 % I(t) ALPHA Text
 uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM + 0*BOX_HEIGHT+SLIDER_V) TEXT_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','left','string','Alpha:');
 % I(t) ALPHA Entry Box
 ed_ialpha_call = ['temp = str2num(get(ed_ialpha,''string''));'...
               'if ((-10 <= temp) & (temp <= 10)),', ...
               'ialpha = temp; end, set(sli_ialpha,''val'',ialpha); '];
 ed_ialpha = uicontrol('style','edit', ...
  'pos', [(SET_LEFT + EDIT_H) (SET_BOTTOM + 0*BOX_HEIGHT+SLIDER_V) EDIT_LENGTH EDIT_DEPTH],...
                   'string', num2str(ialpha), 'val', ialpha,...
                   'call', [ed_ialpha_call]);         
 % I(t) ALPHA Slider
 sli_ialpha = uicontrol(e_control_win,...
     'Style','slider',...
     'Min',-10,'Max',10,'val',ialpha,...
     'pos',[SET_LEFT (SET_BOTTOM+0*BOX_HEIGHT-0*SLIDER_V) SLIDER_LENGTH SLIDER_DEPTH],...
     'CallBack',['ialpha=get(sli_ialpha,''val'');',...
                 'set(ed_ialpha,''string'',num2str(ialpha));']);  
 % A(t) ALPHA Text
 uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM + 2*BOX_HEIGHT+SLIDER_V) TEXT_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','left','string','Alpha:');
 % I(t) ALPHA Entry Box
 ed_aalpha_call = ['temp = str2num(get(ed_aalpha,''string''));'...
               'if ((-10 <= temp) & (temp <= 10)),', ...
               'aalpha = temp; end, set(sli_aalpha,''val'',aalpha); '];
 ed_aalpha = uicontrol('style','edit', ...
  'pos', [(SET_LEFT + EDIT_H) (SET_BOTTOM + 2*BOX_HEIGHT+SLIDER_V) EDIT_LENGTH EDIT_DEPTH],...
                   'string', num2str(aalpha), 'val', aalpha,...
                   'call', [ed_aalpha_call]);         
 % A(t) ALPHA Slider
 sli_aalpha = uicontrol(e_control_win,...
     'Style','slider',...
     'Min',-10,'Max',10,'val',aalpha,...
     'pos',[SET_LEFT (SET_BOTTOM+2*BOX_HEIGHT-0*SLIDER_V) SLIDER_LENGTH SLIDER_DEPTH],...
     'CallBack',['aalpha=get(sli_aalpha,''val'');',...
                 'set(ed_aalpha,''string'',num2str(aalpha));']);  
 SET_LEFT=SET_LEFT+COLUMN_LENGTH/2;

 % I(t) BETA Text
 uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM + 0*BOX_HEIGHT+SLIDER_V) TEXT_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','left','string','Beta:');

 % I(t) BETA Entry Box
 ed_ibeta_call = ['temp = str2num(get(ed_ibeta,''string''));'...
               'if ((-10 <= temp) & (temp <= 10)),', ...
               'ibeta = temp; end, set(sli_ibeta,''val'',ibeta); '];
 ed_ibeta = uicontrol('style','edit', ...
  'pos', [(SET_LEFT + EDIT_H) (SET_BOTTOM + 0*BOX_HEIGHT+SLIDER_V) EDIT_LENGTH EDIT_DEPTH],...
                   'string', num2str(ibeta), 'val', ibeta,...
                   'call', [ed_ibeta_call]);     
 % I(t) BETA Slider
 sli_ibeta = uicontrol(e_control_win,...
     'Style','slider',...
     'Min',-10,'Max',10,'val',ibeta,...
     'pos',[SET_LEFT (SET_BOTTOM+0*BOX_HEIGHT-0*SLIDER_V) SLIDER_LENGTH SLIDER_DEPTH],...
     'CallBack',['ibeta=get(sli_ibeta,''val'');',...
                 'set(ed_ibeta,''string'',num2str(ibeta));']);  
                 
 % A(t) BETA Text
 uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM + 2*BOX_HEIGHT+SLIDER_V) TEXT_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','left','string','Beta:');
 % A(t) BETA Entry Box
 ed_abeta_call = ['temp = str2num(get(ed_abeta,''string''));'...
               'if ((-10 <= temp) & (temp <= 10)),', ...
               'abeta = temp; end, set(sli_abeta,''val'',abeta); '];

 ed_abeta = uicontrol('style','edit', ...
  'pos', [(SET_LEFT + EDIT_H) (SET_BOTTOM + 2*BOX_HEIGHT+SLIDER_V) EDIT_LENGTH EDIT_DEPTH],...
                   'string', num2str(abeta), 'val', abeta,...
                   'call', [ed_abeta_call]);
          
 % A(t) BETA Slider
 sli_abeta = uicontrol(e_control_win,...
     'Style','slider',...
     'Min',-10,'Max',10,'val',abeta,...
     'pos',[SET_LEFT (SET_BOTTOM+2*BOX_HEIGHT-0*SLIDER_V) SLIDER_LENGTH SLIDER_DEPTH],...
     'CallBack',['abeta=get(sli_abeta,''val'');',...
                 'set(ed_abeta,''string'',num2str(abeta));']);  
end, 
% -/- Define Clairinet Parameters -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-    

if (ver_clair)
          
 COLUMN_LENGTH=COLUMN_LENGTH/2;
 SET_LEFT=COLUMN_LENGTH+(SET_LEFT);
 
 % Set up a frame
 uicontrol(e_control_win, 'style','frame',...
               'pos', [(SET_LEFT-COLUMN_BORDER) (SET_BOTTOM-5) COLUMN_LENGTH COLUMN_DEPTH ]);
 uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM+ 4*BOX_HEIGHT - SLIDER_V) SLIDER_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','center','string','Clarinet Control');                      
 % Frequency Text
 uicontrol('style','text',...
          'pos', [SET_LEFT (SET_BOTTOM + 2*BOX_HEIGHT) TEXT_LENGTH TEXT_DEPTH], ...
          'horizontalalignment','left','string','Frequency:');
 % Frequency Entry Box
 ed_fre_call = ['temp = str2num(get(ed_fre,''string''));'...
               'if ((200 <= temp) & (temp <= 1000)),', ...
               'fre = temp; end, set(sli_fre,''val'',fre); '];

 ed_fre = uicontrol('style','edit', ...
  'pos', [(SET_LEFT + EDIT_H) (SET_BOTTOM + 2*BOX_HEIGHT) EDIT_LENGTH EDIT_DEPTH],...
                   'string', num2str(fre), 'val', fre,...
                   'call', [ed_fre_call]);
          
 % Frequency Slider
 sli_fre = uicontrol(e_control_win,...
     'Style','slider',...
     'Min',200,'Max',1000,'val',fre,...
     'pos',[SET_LEFT (SET_BOTTOM+2*BOX_HEIGHT-SLIDER_V) SLIDER_LENGTH SLIDER_DEPTH],...
     'CallBack',['fre=get(sli_fre,''val'');',...
                 'set(ed_fre,''string'',num2str(fre));']); 
 end,
 
 %if you've read this far, you've got a longer attention span than I do..
% -/- Create Button Column   -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/                 

if (ver_scale & ~(ver_clair))
     COLUMN_LENGTH=COLUMN_LENGTH/2;
end

SET_LEFT=COLUMN_LENGTH+(SET_LEFT)+20;

% -/- Plot Output Button   -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

pb_plot_call = [ 'ver_scale=exist(''scale'');',...
                     'if ~(exist(''id_plot'')) ', ...
                     '      id_plot=figure;',...
                     'elseif ~any( get(0,''children'') == id_plot) ',...
                     '      id_plot=figure;',...
                     'end,',... 
                     'figure(id_plot);',...
                     '[y1,y2]=woodwenv(att,sus,decay,fs);',...
                     'tt=delta:delta:(att+sus+decay);',...
                     'if (size(tt,2) < size(y1,2))',...
                     '      y1=y1(1:size(tt,2));',...
                     '      y2=y2(1:size(tt,2));',...
                     'elseif (size(tt,2)>size(y1,2)) ',...
                     '      tt=tt(1:size(y1,2)); end,'];
 
% Add scaling if determined at compile time                 
if (ver_scale) pb_plot_call=[pb_plot_call,...                 
                             'y1=scale(y1,aalpha,abeta);',...
                             'y2=scale(y2,ialpha,ibeta);' ];
end

pb_plot_call = [ pb_plot_call,...
                 'figure(id_plot);',...
                 'subplot(2,1,1),plot(tt,y1),grid;xlabel(''Time(s)'');',...
                 'title([''Amplitude Envelope for Alpha='',',...
                         'num2str(aalpha),'', Beta='',',...
                         'num2str(abeta)]);' ,...        
                 'subplot(2,1,2),plot(tt,y2),grid;xlabel(''Time(s)'');',...
                 'title([''Modulation Index Envelope for Alpha='',',...
                         'num2str(ialpha),'', Beta='',',...
                         'num2str(ibeta)]);' ,...  
                 'clear tt;clear y1;clear y2;',...                           
                ]; 

pb_plot = uicontrol('style','push', ...
                    'string','Plot Envelopes',...
                    'pos',[SET_LEFT (SET_BOTTOM+3*BOX_HEIGHT)...
                           SLIDER_LENGTH (BOX_HEIGHT-SLIDER_V)],...
                     'call',pb_plot_call);

% -/- Play Current Button  -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

pb_sound_call = [ '[y1,y2]=woodwenv(att,sus,decay,fs);',...
                  'tt=delta:delta:(att+sus+decay);',...
                  'if (size(tt,2)<size(y1,2))',...
                  '      y1=y1(1:size(tt,2));',...
                  '      y2=y2(1:size(tt,2));',...
                  'elseif (size(tt,2)>size(y1,2)) ',...
                  '      tt=tt(1:size(y1,2)); end,'];
                  
if (ver_scale) 
  pb_sound_call= [ pb_sound_call,...
                   'y1=scale(y1,aalpha,abeta);',...
                   'y2=scale(y2,ialpha,ibeta);'];
end
                                  
if (ver_clair) 
  pb_sound_call = [ pb_sound_call,...
                   'zz=clarinet(fre,y1,y2,(att+sus+decay),fs);'];
else
  pb_sound_call = [ pb_sound_call,...
                   'zz=y1.*cos(2*pi*600*tt + y2.*cos(2*pi*900*tt));'];
end

pb_sound_call = [ pb_sound_call, ...
                  'sound(zz,fs);',...
                  'clear zz; clear tt;',...
                ];

pb_sound = uicontrol('style','push', ...
                     'string','Play Sound',...
                     'pos',[SET_LEFT (SET_BOTTOM+2*BOX_HEIGHT) ...
                            SLIDER_LENGTH (BOX_HEIGHT-SLIDER_V)],...
                     'call',pb_sound_call);

% -/- Print Button   -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/
% Prints the current settings to a file. Notice that the file name now
% changes with multiple copies. Allows users to burn out as much paper
% as they want, when they return to unix.

pb_print_call = ['page_number=page_number+1;',...
                  pb_plot_call,...
                 'eval([''print -f env_plot'',num2str(page_number)]);'];

pb_print = uicontrol('style','push', ...
                     'string','Print to File',...
                     'pos',[SET_LEFT (SET_BOTTOM+1*BOX_HEIGHT) ...
                            SLIDER_LENGTH (BOX_HEIGHT-SLIDER_V)],...
                     'call',pb_print_call);

% -/- Exit Button   -/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

% Get rid of all the objects this script uses.
% Note: Delete the control_panel window near the top so it will actually
%       die. If it's at the bottom, sometimes it stays alive.
% Note: We create a fake id_plot window in case the user got hyper and
%       killed the window before we do. By doing this we avoid a lot
%       of "delete dead object" messages. Kind of goofy, but it works...

pb_exit_call = ['if (exist(''id_plot'')) ', ...
                     'figure(id_plot);',...
                     'delete(id_plot);',...
                     'clear id_plot;',...
                'end,',...
                'delete(e_control_win);',...
'clear BOX_HEIGHT;          clear e_control_win;       clear pb_exit;',...
'clear COLUMN_BORDER ;      clear ed_aalpha;           clear clear pb_exit_call;',...
'clear COLUMN_DEPTH;        clear ed_aalpha_call;      clear pb_plot;',...
'clear COLUMN_LENGTH ;      clear ed_abeta;            clear pb_plot_call;',...
'clear EDIT_DEPTH;          clear ed_abeta_call;       clear pb_print;',...
'clear EDIT_H;              clear ed_att;              clear pb_print_call;',...
'clear EDIT_LENGTH;         clear ed_att_call;         clear pb_sound;',...
'clear SET_BOTTOM;          clear ed_decay;            clear pb_sound_call;',...
'clear SET_LEFT;            clear ed_decay_call;       clear sli_aalpha;',...
'clear SLIDER_DEPTH;        clear ed_fre;              clear sli_abeta;',...
'clear SLIDER_LENGTH ;      clear ed_fre_call;         clear sli_att;',...
'clear SLIDER_V;            clear ed_ialpha;           clear sli_decay;',...
'clear TEXT_DEPTH;          clear ed_ialpha_call;      clear sli_fre;',...
'clear TEXT_LENGTH;         clear ed_ibeta;            clear sli_ialpha;',...
'clear W_DEPTH ;            clear ed_ibeta_call;       clear sli_ibeta;',...
'clear W_LEFT ;             clear ed_sus;              clear sli_sus;',...
'clear W_LENGTH ;           clear ed_sus_call;         clear sus;',...
'clear aalpha;              clear fre;                 clear ver_clair;',...
'clear abeta;               clear fs;                  clear ver_scale;',...
'clear ans;                 clear ialpha;              clear y1;',...
'clear att;                 clear ibeta;               clear y2;',...
'clear decay ;              clear id_plot;             clear temp;',...
'clear delta;               clear page_number;'];
            
pb_exit = uicontrol('style','push','units','normal', ...
                     'string','Exit','pos',[0.90 0.0 0.10 0.15],...
                     'call',pb_exit_call);